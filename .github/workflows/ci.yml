name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  linux:
    name: Linux build
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v4

    - name: Update
      run: sudo apt-get update

    - name: Dependencies
      run: sudo apt-get install build-essential cmake libboost-all-dev liblzma-dev libbz2-dev zlib1g-dev

    - name: Configure
      run: cmake --version && cmake -B ${{github.workspace}}/build -Werror=dev -Werror=deprecated -DCONTINUOUS_INTEGRATION=1 -DBoost_USE_STATIC_LIBS=ON  -DCMAKE_EXE_LINKER_FLAGS="-lz -lbz2"

    - name: Build
      run: cmake --build ${{github.workspace}}/build

    - name: Check Style
      run: cmake --build ${{github.workspace}}/build --target style

    # Upload release for each build
    - name: Upload binaries to release
      id: upload_release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ github.token }}
        file: ${{github.workspace}}/build/innoextract
        tag: vtest
        release_name: innoextract-test
        draft: false
        prerelease: false

  macos:
    name: macOS build
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v4

    - name: Update
      run: brew update

    - name: Workaround for Python install isssues - https://github.com/actions/runner-images/issues/8838
      run: brew install python@3 || brew link --overwrite python@3

    - name: Dependencies
      env:
        HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK: 1
      run: brew install boost xz

    - name: Configure
      run: cmake --version && cmake -B ${{github.workspace}}/build -Werror=dev -Werror=deprecated -DCONTINUOUS_INTEGRATION=1

    - name: Build
      run: cmake --build ${{github.workspace}}/build
